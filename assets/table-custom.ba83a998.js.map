{"version":3,"file":"table-custom.ba83a998.js","sources":["../../src/components/table-custom.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"table-toolbar\" v-if=\"hasToolbar\">\r\n            <div class=\"table-toolbar-left\">\r\n                <slot name=\"toolbarBtn\"></slot>\r\n            </div>\r\n            <div class=\"table-toolbar-right flex-center\">\r\n                <template v-if=\"multipleSelection.length > 0\">\r\n                    <el-tooltip effect=\"dark\" content=\"删除选中\" placement=\"top\">\r\n                        <el-icon class=\"columns-setting-icon\" @click=\"delSelection(multipleSelection)\">\r\n                            <Delete />\r\n                        </el-icon>\r\n                    </el-tooltip>\r\n                    <el-divider direction=\"vertical\" />\r\n                </template>\r\n                <el-tooltip effect=\"dark\" content=\"刷新\" placement=\"top\">\r\n                    <el-icon class=\"columns-setting-icon\" @click=\"refresh\">\r\n                        <Refresh />\r\n                    </el-icon>\r\n                </el-tooltip>\r\n                <el-divider direction=\"vertical\" />\r\n                <el-tooltip effect=\"dark\" content=\"列设置\" placement=\"top\">\r\n                    <el-dropdown :hide-on-click=\"false\" size=\"small\" trigger=\"click\">\r\n                        <el-icon class=\"columns-setting-icon\">\r\n                            <Setting />\r\n                        </el-icon>\r\n                        <template #dropdown>\r\n                            <el-dropdown-menu>\r\n                                <el-dropdown-item v-for=\"c in columns\">\r\n                                    <el-checkbox v-model=\"c.visible\" :label=\"c.label\" />\r\n                                </el-dropdown-item>\r\n                            </el-dropdown-menu>\r\n                        </template>\r\n                    </el-dropdown>\r\n                </el-tooltip>\r\n            </div>\r\n        </div>\r\n        <el-table class=\"mgb20\" :style=\"{ width: '100%' }\" border :data=\"tableData\" :row-key=\"rowKey\"\r\n            @selection-change=\"handleSelectionChange\" table-layout=\"auto\">\r\n            <template v-for=\"item in columns\" :key=\"item.prop\">\r\n                <el-table-column v-if=\"item.visible\" :prop=\"item.prop\" :label=\"item.label\" :width=\"item.width\"\r\n                    :type=\"item.type\" :align=\"item.align || 'center'\">\r\n\r\n                    <template #default=\"{ row, column, $index }\" v-if=\"item.type === 'index'\">\r\n                        {{ getIndex($index) }}\r\n                    </template>\r\n                    <template #default=\"{ row, column, $index }\" v-if=\"!item.type\">\r\n                        <slot :name=\"item.prop\" :rows=\"row\" :index=\"$index\">\r\n                            <template v-if=\"item.prop == 'operator'\">\r\n                                <el-button type=\"warning\" size=\"small\" :icon=\"View\" @click=\"viewFunc(row)\">\r\n                                    查看\r\n                                </el-button>\r\n                                <el-button type=\"primary\" size=\"small\" :icon=\"Edit\" @click=\"editFunc(row)\">\r\n                                    编辑\r\n                                </el-button>\r\n                                <el-button type=\"danger\" size=\"small\" :icon=\"Delete\" @click=\"handleDelete(row)\">\r\n                                    删除\r\n                                </el-button>\r\n                            </template>\r\n                            <span v-else-if=\"item.formatter\">\r\n                                {{ item.formatter(row[item.prop]) }}\r\n                            </span>\r\n                            <span v-else>\r\n                                {{ row[item.prop] }}\r\n                            </span>\r\n                        </slot>\r\n                    </template>\r\n                </el-table-column>\r\n            </template>\r\n        </el-table>\r\n        <el-pagination v-if=\"hasPagination\" :current-page=\"currentPage\" :page-size=\"pageSize\" :background=\"true\"\r\n            :layout=\"layout\" :total=\"total\" @current-change=\"handleCurrentChange\" />\r\n    </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { toRefs, PropType, ref } from 'vue'\r\nimport { Delete, Edit, View, Refresh } from '@element-plus/icons-vue';\r\nimport { ElMessageBox } from 'element-plus';\r\n\r\nconst props = defineProps({\r\n    // 表格相关\r\n    tableData: {\r\n        type: Array,\r\n        default: []\r\n    },\r\n    columns: {\r\n        type: Array as PropType<any[]>,\r\n        default: []\r\n    },\r\n    rowKey: {\r\n        type: String,\r\n        default: 'id'\r\n    },\r\n    hasToolbar: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    //  分页相关\r\n    hasPagination: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    total: {\r\n        type: Number,\r\n        default: 0\r\n    },\r\n    currentPage: {\r\n        type: Number,\r\n        default: 1\r\n    },\r\n    pageSize: {\r\n        type: Number,\r\n        default: 10\r\n    },\r\n\r\n    layout: {\r\n        type: String,\r\n        default: 'total, prev, pager, next'\r\n    },\r\n    delFunc: {\r\n        type: Function,\r\n        default: () => { }\r\n    },\r\n    viewFunc: {\r\n        type: Function,\r\n        default: () => { }\r\n    },\r\n    editFunc: {\r\n        type: Function,\r\n        default: () => { }\r\n    },\r\n    delSelection: {\r\n        type: Function,\r\n        default: () => { }\r\n    },\r\n    refresh: {\r\n        type: Function,\r\n        default: () => { }\r\n    },\r\n    changePage: {\r\n        type: Function,\r\n        default: () => { }\r\n    }\r\n})\r\n\r\nlet {\r\n    tableData,\r\n    columns,\r\n    rowKey,\r\n    hasToolbar,\r\n    hasPagination,\r\n    total,\r\n    currentPage,\r\n    pageSize,\r\n    layout,\r\n} = toRefs(props)\r\n\r\ncolumns.value.forEach((item) => {\r\n    if (item.visible === undefined) {\r\n        item.visible = true\r\n    }\r\n})\r\n\r\n// 当选择项发生变化时会触发该事件\r\nconst multipleSelection = ref([])\r\nconst handleSelectionChange = (selection: any[]) => {\r\n    multipleSelection.value = selection\r\n}\r\n\r\n// 当前页码变化的事件\r\nconst handleCurrentChange = (val: number) => {\r\n    props.changePage(val)\r\n}\r\n\r\nconst handleDelete = (row) => {\r\n    ElMessageBox.confirm('确定要删除吗？', '提示', {\r\n        type: 'warning'\r\n    })\r\n        .then(async () => {\r\n            props.delFunc(row);\r\n        })\r\n        .catch(() => { });\r\n};\r\n\r\nconst getIndex = (index: number) => {\r\n    return index + 1 + (currentPage.value - 1) * pageSize.value\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.table-toolbar {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: flex-end;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.columns-setting-icon {\r\n    display: block;\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n    color: #676767;\r\n}\r\n</style>\r\n<style>\r\n.table-header .cell {\r\n    color: #333;\r\n}\r\n</style>"],"names":["props","__props","tableData","columns","rowKey","hasToolbar","hasPagination","total","currentPage","pageSize","layout","toRefs","item","multipleSelection","ref","handleSelectionChange","selection","handleCurrentChange","val","handleDelete","row","ElMessageBox","getIndex","index"],"mappings":"oxCAgFA,MAAAA,EAAAC,EAkEA,GAAA,CAAI,UAAAC,EACA,QAAAC,EACA,OAAAC,EACA,WAAAC,EACA,cAAAC,EACA,MAAAC,EACA,YAAAC,EACA,SAAAC,EACA,OAAAC,CACA,EAAAC,GAAAX,CAAA,EAGJG,EAAA,MAAA,QAAAS,GAAA,CACIA,EAAA,UAAA,SACIA,EAAA,QAAA,GACJ,CAAA,EAIJ,MAAAC,EAAAC,GAAA,CAAA,CAAA,EACAC,EAAAC,GAAA,CACIH,EAAA,MAAAG,CAA0B,EAI9BC,EAAAC,GAAA,CACIlB,EAAA,WAAAkB,CAAA,CAAoB,EAGxBC,EAAAC,GAAA,CACIC,GAAA,QAAA,6CAAA,eAAA,CAAsC,KAAA,SAC5B,CAAA,EAAA,KAAA,SAAA,CAGFrB,EAAA,QAAAoB,CAAA,CAAiB,CAAA,EAAA,MAAA,IAAA,CAER,CAAA,CAAG,EAGxBE,EAAAC,GACIA,EAAA,GAAAf,EAAA,MAAA,GAAAC,EAAA"}