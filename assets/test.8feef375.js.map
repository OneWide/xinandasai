{"version":3,"file":"test.8feef375.js","sources":["../../src/views/test/test.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <div class=\"row\">\r\n        <div class=\"chart-box\">\r\n          <h3>用户密钥对使用情况</h3>\r\n          <div class=\"chart\" ref=\"heatmapChart\"></div>\r\n        </div>\r\n        <div class=\"chart-box\">\r\n          <h3>密钥类型分布</h3>\r\n          <div class=\"chart\" ref=\"histogramChart\"></div>\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"row\">\r\n        <div class=\"chart-box\">\r\n          <h3>AP 节点广播次数</h3>\r\n          <div class=\"chart\" ref=\"lineChart\"></div>\r\n        </div>\r\n        <div class=\"chart-box\">\r\n          <h3>群大小分布</h3>\r\n          <div class=\"chart\" ref=\"pieChart\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup lang=\"ts\">\r\n  import { ref, onMounted } from 'vue'\r\n  import * as echarts from 'echarts'\r\n  \r\n  const heatmapChart = ref()\r\n  const histogramChart = ref()\r\n  const lineChart = ref()\r\n  const pieChart = ref()\r\n  \r\n  // 热力图数据\r\n  const users = ['PC2', 'PC5', 'PC6', 'PC8']\r\n  const keys = ['Key1', 'Key2', 'Key3', 'Key4', 'Key5', 'Key6']\r\n  const heatmapData = []\r\n  for (let i = 0; i < keys.length; i++) {\r\n    for (let j = 0; j < users.length; j++) {\r\n      heatmapData.push([j, i, Math.floor(Math.random() * 100)])\r\n    }\r\n  }\r\n  \r\n  // 密钥类型分布\r\n  const keyTypes = [\r\n    { type: 'RSA-2048', count: 5 },\r\n    { type: 'ECC-P256', count: 3 },\r\n    { type: 'RSA-4096', count: 2 },\r\n    { type: 'SM2', count: 1 }\r\n  ]\r\n  const colors = ['#5470c6', '#91cc75', '#fac858', '#ee6666']\r\n  \r\n  // 广播次数条形图数据（6个AP）\r\n  const broadcastCounts = [\r\n    { name: 'AP-1', count: 120 },\r\n    { name: 'AP-2', count: 85 },\r\n    { name: 'AP-3', count: 60 },\r\n    { name: 'AP-4', count: 45 },\r\n    { name: 'AP-5', count: 30 },\r\n    { name: 'AP-6', count: 20 }\r\n  ]\r\n  \r\n  // 群大小分布\r\n  const groupSizes = [\r\n    { name: 'Group 1', value: 3 },\r\n    { name: 'Group 2', value: 3 },\r\n    { name: 'Group 3', value: 4 },\r\n  ]\r\n  \r\n  onMounted(() => {\r\n    // 热力图\r\n    echarts.init(heatmapChart.value).setOption({\r\n      tooltip: { position: 'top' },\r\n      grid: { height: '60%', top: '10%' },\r\n      xAxis: {\r\n        type: 'category',\r\n        data: users,\r\n        splitArea: { show: true }\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: keys,\r\n        splitArea: { show: true }\r\n      },\r\n      visualMap: {\r\n        min: 0,\r\n        max: 100,\r\n        calculable: true,\r\n        orient: 'horizontal',\r\n        left: 'center',\r\n        bottom: '5%'\r\n      },\r\n      series: [{\r\n        name: '使用频次',\r\n        type: 'heatmap',\r\n        data: heatmapData,\r\n        label: { show: false },\r\n        emphasis: {\r\n          itemStyle: {\r\n            shadowBlur: 10,\r\n            shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n          }\r\n        }\r\n      }]\r\n    })\r\n  \r\n    // 直方图\r\n    echarts.init(histogramChart.value).setOption({\r\n      tooltip: {},\r\n      xAxis: {\r\n        type: 'category',\r\n        data: keyTypes.map(k => k.type)\r\n      },\r\n      yAxis: {\r\n        type: 'value'\r\n      },\r\n      series: [{\r\n        name: '数量',\r\n        type: 'bar',\r\n        data: keyTypes.map(k => k.count),\r\n        itemStyle: { color: (params) => colors[params.dataIndex] }\r\n      }]\r\n    })\r\n  \r\n    // 横向条形图：AP 节点广播次数\r\n    echarts.init(lineChart.value).setOption({\r\n      tooltip: {\r\n        trigger: 'axis',\r\n        axisPointer: { type: 'shadow' }\r\n      },\r\n      xAxis: {\r\n        type: 'value',\r\n        name: '广播次数'\r\n      },\r\n      yAxis: {\r\n        type: 'category',\r\n        data: broadcastCounts.map(ap => ap.name),\r\n        inverse: true\r\n      },\r\n      series: [{\r\n        name: '广播次数',\r\n        type: 'bar',\r\n        data: broadcastCounts.map(ap => ap.count),\r\n        itemStyle: {\r\n          color: '#3d84a8'\r\n        },\r\n        label: {\r\n          show: true,\r\n          position: 'right'\r\n        }\r\n      }]\r\n    })\r\n  \r\n    // 饼图\r\n    echarts.init(pieChart.value).setOption({\r\n      tooltip: {\r\n        trigger: 'item'\r\n      },\r\n      legend: {\r\n        top: '5%',\r\n        left: 'center'\r\n      },\r\n      series: [{\r\n        name: '群规模',\r\n        type: 'pie',\r\n        radius: ['40%', '70%'],\r\n        avoidLabelOverlap: false,\r\n        label: {\r\n          show: true,\r\n          position: 'outside'\r\n        },\r\n        labelLine: {\r\n          show: true\r\n        },\r\n        data: groupSizes\r\n      }]\r\n    })\r\n  })\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .container {\r\n    padding: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 24px;\r\n  }\r\n  .row {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 24px;\r\n  }\r\n  .chart-box {\r\n    flex: 1;\r\n    background-color: #fff;\r\n    padding: 16px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n  }\r\n  .chart {\r\n    width: 100%;\r\n    height: 360px;\r\n  }\r\n  h3 {\r\n    text-align: center;\r\n    margin-bottom: 12px;\r\n    color: #333;\r\n  }\r\n  </style>\r\n  "],"names":["heatmapChart","ref","histogramChart","lineChart","pieChart","users","keys","heatmapData","i","j","keyTypes","colors","broadcastCounts","groupSizes","onMounted","echarts.init","k","params","ap"],"mappings":"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"}